version: '3.9'

volumes:
  postgres_data:
  redis_data:
  front_bundle:
  postgres_usr_data:
  postgres_recom_data:

networks:
  local_area:
    driver: bridge

services:
  postgres:
    image: postgres:15.3-alpine
    container_name: postgres
    restart: always
    networks:
      local_area:
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  postgres_usr:
    image: postgres:15.3-alpine
    container_name: postgres_usr
    restart: always
    networks:
      local_area:
    volumes:
      - postgres_usr_data:/var/lib/postgresql/data
      - ./init_usr.sql:/docker-entrypoint-initdb.d/init_usr.sql
    environment:
      POSTGRES_USER: ${POSTGRES_USR_USER}
      POSTGRES_PASSWORD: ${POSTGRES_USR_PASSWORD}
      POSTGRES_DB: ${POSTGRES_USR_DB}


  postgres_recom:
    image: postgres:15.3-alpine
    container_name: postgres_recom
    restart: always
    networks:
      local_area:
    volumes:
      - postgres_recom_data:/var/lib/postgresql/data
      - ./init_recom.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${POSTGRES_RECOM_USER}
      POSTGRES_PASSWORD: ${POSTGRES_RECOM_PASSWORD}
      POSTGRES_DB: ${POSTGRES_RECOM_DB}


  auth:
    image: holi2023/auth:latest
    container_name: auth
    networks:
      local_area:
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres_usr:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - ${AUTHMS_HTTP_SERVER_PORT}:${AUTHMS_HTTP_SERVER_PORT}

  subscription:
    image: holi2023/subscription:latest
    container_name: subscription
    networks:
      local_area:
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres_usr:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - ${SUBMS_HTTP_SERVER_PORT}:${SUBMS_HTTP_SERVER_PORT}

  profile:
    container_name: profile
    image: holi2023/profile:latest
    networks:
      local_area:
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      auth:
        condition: service_started
    ports:
      - ${PROFILEMS_HTTP_SERVER_PORT}:${PROFILEMS_HTTP_SERVER_PORT}

  film_series:
    container_name: films_series
    image: holi2023/films_series:latest
    networks:
      local_area:
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      auth:
        condition: service_started
    ports:
      - ${FILM_SERIES_HTTP_SERVER_PORT}:${FILM_SERIES_HTTP_SERVER_PORT}

  backend:
    container_name: backend
    image: holi2023/main:latest
    networks:
      local_area:
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      auth:
        condition: service_started
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}

  fill_db:
    image: holi2023/fill:latest
    networks:
      local_area:
    container_name: fill_db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    depends_on:
      postgres:
        condition: service_started


  recommendations:
    image: holi2023/recommendations:latest
    container_name: recommendations
    networks:
      local_area:
    depends_on:
      postgres:
        condition: service_started
      postgres_recom:
        condition: service_started
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_RECOM_USER: ${POSTGRES_RECOM_USER}
      POSTGRES_RECOM_PASSWORD: ${POSTGRES_RECOM_PASSWORD}
      POSTGRES_RECOM_DB: ${POSTGRES_RECOM_DB}
      POSTGRES_RECOM_HOST: ${POSTGRES_RECOM_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}

  redis:
    image: redis:6.2-alpine
    container_name: redis
    networks:
      local_area:
    restart: always
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/var/lib/redis/data


#  grafana:
#    image: grafana/grafana-enterprise
#    networks:
#      local_area:
#    container_name: grafana
#    restart: unless-stopped
#    expose:
#      - 3000
#    ports:
#      - 3000:3000
#
#  prometheus:
#    image: prom/prometheus:latest
#    networks:
#      local_area:
#    container_name: prometheus
#    expose:
#      - 9090
#    command:
#      --config.file=/etc/prometheus/prometheus.yml
#    volumes:
#      - ../../prometheus.yml:/etc/prometheus/prometheus.yml:ro
#    ports:
#      - 9090:9090
#
#  node-exporter:
#    image: quay.io/prometheus/node-exporter:latest
#    networks:
#      local_area:
#    restart: unless-stopped
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.rootfs=/rootfs'
#      - '--path.sysfs=/host/sys'
#      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
#    expose:
#      - 9100
